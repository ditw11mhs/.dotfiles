- name: Install zsh and plugin dependencies
  apt:
    name:
      - zsh
      - fzf
      - build-essential
      - make
      - exa
    state: present
  become: true
  become_method: sudo

- name: Check for oh-my-zsh installation
  stat:
    path: ~/.oh-my-zsh
  register: oh_my_zsh_stat

- name: Install oh-my-zsh
  raw: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
  when: not oh_my_zsh_stat.stat.exists

- name: Delete custom oh-my-zsh plugins folder
  file:
    path: "{{ dotfiles_user_home }}/.oh-my-zsh/custom/plugins"
    state: absent
  when: not oh_my_zsh_stat.stat.exists

- name: Add custom oh-my-zsh plugins
  file:
    src: "{{ dotfiles_home }}/roles/zsh/files/plugins"
    dest: "{{ dotfiles_user_home }}/.oh-my-zsh/custom/plugins"
    state: link
  when: not oh_my_zsh_stat.stat.exists

- name: Check for .zshrc
  stat:
    path: "{{ dotfiles_user_home }}/.zshrc"
  register: zshrc_stat

- name: Back up .zshrc
  command: mv "{{ dotfiles_user_home }}/.zshrc" "{{ dotfiles_user_home }}/.zshrc.bak"
  args:
    creates: "{{ dotfiles_user_home }}/.zshrc.bak"
  when: zshrc_stat.stat.exists

- name: Symlink .zshrc
  file:
    src: "{{ dotfiles_home }}/roles/zsh/files/.zshrc"
    dest: "{{ dotfiles_user_home }}/.zshrc"
    state: link

- name: Check for .zshenv
  stat:
    path: "{{ dotfiles_user_home }}/.zshenv"
  register: zshenv_stat

- name: Back up .zshenv
  command: mv "{{ dotfiles_user_home }}/.zshenv" "{{ dotfiles_user_home }}/.zshenv.bak"
  args:
    creates: "{{ dotfiles_user_home }}/.zshenv.bak"
  when: zshenv_stat.stat.exists

- name: Symlink .zshenv
  file:
    src: "{{ dotfiles_home }}/roles/zsh/files/.zshenv"
    dest: "{{ dotfiles_user_home }}/.zshenv"
    state: link
